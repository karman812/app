{"ast":null,"code":"import firebase from \"firebase\";\nexport const initializeApp = () => {\n  let firebaseConfig = {\n    apiKey: \"AIzaSyD6DnGbVfdJlDJ_pEOUfDfTDJrA8j3lIs8\",\n    authDomain: \"dv-inventory.firebaseapp.com\",\n    databaseURL: \"https://dv-inventory.firebaseio.com\",\n    projectId: \"dv-inventory\",\n    storageBucket: \"dv-inventory.appspot.com\",\n    messagingSenderId: \"130062240176\",\n    appId: \"1:130062240176:web:ecbca5d29b37d25c6cee75\"\n  };\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n};\nexport const getPlaces = () => {\n  return firebase.firestore().collection(\"places\").get().then(response => {\n    let docs = response.docs.map(x => ({\n      id: x.id,\n      data: x.data(),\n      parts: x.data().parts && x.data().parts.map(part => part.id)\n    }));\n    return docs;\n  });\n};\nexport const getInventory = () => {\n  return firebase.firestore().collection(\"inventory\").get().then(response => {\n    let docs = response.docs.map(x => ({\n      id: x.id,\n      data: x.data(),\n      placeId: x.data().place.id\n    }));\n    return docs;\n  });\n};\nexport const updateInventory = (inventoryIteId, count) => {\n  return firebase.firestore().collection(\"inventory\").doc(inventoryIteId).update({\n    count: count\n  }).then(() => {\n    console.info(\"Done\");\n  });\n};\nexport const deleteInventory = inventoryId => {\n  return firebase.firestore().collection(\"inventory\").doc(inventoryId).delete().then(() => {\n    console.info(\"Done\");\n  });\n};\nexport const addInventory = (name, count, placeId) => {\n  return firebase.firestore().collection(\"inventory\").doc().set({\n    name: name,\n    count: count,\n    place: firebase.firestore().collection(\"places\").doc(placeId) // main-101 – id места\n\n  }).then(() => {\n    console.info(\"Done\");\n  });\n};","map":{"version":3,"sources":["C:/Users/nigga/Desktop/прога/new-schema/src/api/api.js"],"names":["firebase","initializeApp","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","apps","length","getPlaces","firestore","collection","get","then","response","docs","map","x","id","data","parts","part","getInventory","placeId","place","updateInventory","inventoryIteId","count","doc","update","console","info","deleteInventory","inventoryId","delete","addInventory","name","set"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,MAAIC,cAAc,GAAG;AACjBC,IAAAA,MAAM,EAAE,yCADS;AAEjBC,IAAAA,UAAU,EAAE,8BAFK;AAGjBC,IAAAA,WAAW,EAAE,qCAHI;AAIjBC,IAAAA,SAAS,EAAE,cAJM;AAKjBC,IAAAA,aAAa,EAAE,0BALE;AAMjBC,IAAAA,iBAAiB,EAAE,cANF;AAOjBC,IAAAA,KAAK,EAAE;AAPU,GAArB;;AASA,MAAI,CAACT,QAAQ,CAACU,IAAT,CAAcC,MAAnB,EAA2B;AACvBX,IAAAA,QAAQ,CAACC,aAAT,CAAuBC,cAAvB;AACH;AACJ,CAbM;AAeP,OAAO,MAAMU,SAAS,GAAG,MAAM;AAC3B,SAAOZ,QAAQ,CAACa,SAAT,GAAqBC,UAArB,CAAgC,QAAhC,EAA0CC,GAA1C,GAAgDC,IAAhD,CAAqDC,QAAQ,IAAI;AACpE,QAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,CAAC,KAAK;AAC/BC,MAAAA,EAAE,EAAED,CAAC,CAACC,EADyB;AAE/BC,MAAAA,IAAI,EAAEF,CAAC,CAACE,IAAF,EAFyB;AAG/BC,MAAAA,KAAK,EAAEH,CAAC,CAACE,IAAF,GAASC,KAAT,IAAkBH,CAAC,CAACE,IAAF,GAASC,KAAT,CAAeJ,GAAf,CAAmBK,IAAI,IAAIA,IAAI,CAACH,EAAhC;AAHM,KAAL,CAAnB,CAAX;AAKA,WAAOH,IAAP;AACH,GAPM,CAAP;AAQH,CATM;AAWP,OAAO,MAAMO,YAAY,GAAG,MAAM;AAC9B,SAAOzB,QAAQ,CAACa,SAAT,GAAqBC,UAArB,CAAgC,WAAhC,EAA6CC,GAA7C,GAAmDC,IAAnD,CAAwDC,QAAQ,IAAI;AACvE,QAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,CAAC,KAAK;AAC/BC,MAAAA,EAAE,EAAED,CAAC,CAACC,EADyB;AAE/BC,MAAAA,IAAI,EAAEF,CAAC,CAACE,IAAF,EAFyB;AAG/BI,MAAAA,OAAO,EAAEN,CAAC,CAACE,IAAF,GAASK,KAAT,CAAeN;AAHO,KAAL,CAAnB,CAAX;AAKA,WAAOH,IAAP;AACH,GAPM,CAAP;AAQH,CATM;AAUP,OAAO,MAAMU,eAAe,GAAG,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AACtD,SAAO9B,QAAQ,CAACa,SAAT,GAAqBC,UAArB,CAAgC,WAAhC,EAA6CiB,GAA7C,CAAiDF,cAAjD,EAAiEG,MAAjE,CAAwE;AAC3EF,IAAAA,KAAK,EAAEA;AADoE,GAAxE,EAEJd,IAFI,CAEC,MAAM;AACViB,IAAAA,OAAO,CAACC,IAAR,CAAa,MAAb;AACH,GAJM,CAAP;AAKH,CANM;AAQP,OAAO,MAAMC,eAAe,GAAIC,WAAD,IAAiB;AAC5C,SAAOpC,QAAQ,CAACa,SAAT,GAAqBC,UAArB,CAAgC,WAAhC,EAA6CiB,GAA7C,CAAiDK,WAAjD,EAA8DC,MAA9D,GAAuErB,IAAvE,CAA4E,MAAM;AACrFiB,IAAAA,OAAO,CAACC,IAAR,CAAa,MAAb;AACH,GAFM,CAAP;AAGH,CAJM;AAMP,OAAO,MAAMI,YAAY,GAAG,CAACC,IAAD,EAAOT,KAAP,EAAcJ,OAAd,KAA0B;AAClD,SAAO1B,QAAQ,CAACa,SAAT,GAAqBC,UAArB,CAAgC,WAAhC,EAA6CiB,GAA7C,GAAmDS,GAAnD,CAAuD;AAC1DD,IAAAA,IAAI,EAAEA,IADoD;AAE1DT,IAAAA,KAAK,EAAEA,KAFmD;AAG1DH,IAAAA,KAAK,EAAE3B,QAAQ,CAACa,SAAT,GAAqBC,UAArB,CAAgC,QAAhC,EAA0CiB,GAA1C,CAA8CL,OAA9C,CAHmD,CAGI;;AAHJ,GAAvD,EAIJV,IAJI,CAIC,MAAM;AACViB,IAAAA,OAAO,CAACC,IAAR,CAAa,MAAb;AACH,GANM,CAAP;AAOH,CARM","sourcesContent":["import firebase from \"firebase\";\r\n\r\nexport const initializeApp = () => {\r\n    let firebaseConfig = {\r\n        apiKey: \"AIzaSyD6DnGbVfdJlDJ_pEOUfDfTDJrA8j3lIs8\",\r\n        authDomain: \"dv-inventory.firebaseapp.com\",\r\n        databaseURL: \"https://dv-inventory.firebaseio.com\",\r\n        projectId: \"dv-inventory\",\r\n        storageBucket: \"dv-inventory.appspot.com\",\r\n        messagingSenderId: \"130062240176\",\r\n        appId: \"1:130062240176:web:ecbca5d29b37d25c6cee75\"\r\n    };\r\n    if (!firebase.apps.length) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n}\r\n\r\nexport const getPlaces = () => {\r\n    return firebase.firestore().collection(\"places\").get().then(response => {\r\n        let docs = response.docs.map(x => ({\r\n            id: x.id,\r\n            data: x.data(),\r\n            parts: x.data().parts && x.data().parts.map(part => part.id)\r\n        }));\r\n        return docs;\r\n    });\r\n}\r\n\r\nexport const getInventory = () => {\r\n    return firebase.firestore().collection(\"inventory\").get().then(response => {\r\n        let docs = response.docs.map(x => ({\r\n            id: x.id,\r\n            data: x.data(),\r\n            placeId: x.data().place.id\r\n        }));\r\n        return docs;\r\n    });\r\n}\r\nexport const updateInventory = (inventoryIteId, count) => {\r\n    return firebase.firestore().collection(\"inventory\").doc(inventoryIteId).update({\r\n        count: count\r\n    }).then(() => {\r\n        console.info(\"Done\");\r\n    });\r\n}\r\n\r\nexport const deleteInventory = (inventoryId) => {\r\n    return firebase.firestore().collection(\"inventory\").doc(inventoryId).delete().then(() => {\r\n        console.info(\"Done\");\r\n    });\r\n}\r\n\r\nexport const addInventory = (name, count, placeId) => {\r\n    return firebase.firestore().collection(\"inventory\").doc().set({\r\n        name: name,\r\n        count: count,\r\n        place: firebase.firestore().collection(\"places\").doc(placeId) // main-101 – id места\r\n    }).then(() => {\r\n        console.info(\"Done\");\r\n    });\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}