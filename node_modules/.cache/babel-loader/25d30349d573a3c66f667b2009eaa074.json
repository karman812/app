{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nigga\\\\Desktop\\\\\\u043F\\u0440\\u043E\\u0433\\u0430\\\\new-schema\\\\src\\\\components\\\\ChangeInventory\\\\AddInvenory\\\\AddInventoryForm.jsx\";\nimport { maxLengthCreator, requiredField, isNumber } from \"../../../validators/validators\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../../common/FormControls/FormControls\";\nimport { Button, RadioGroup, Select } from '@material-ui/core';\nimport ChangeInventoryItem from \"../ChangeInventoryItem\";\nimport styles from './AddInventory.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxlength20 = maxLengthCreator(20);\nconst maxlength5 = maxLengthCreator(5);\n\nconst TextareaForm = props => {\n  let onChange = e => {\n    return props.setNewPlaceId(e.target.value);\n  };\n\n  let places = props.places.map((el, i) => {\n    return /*#__PURE__*/_jsxDEV(ChangeInventoryItem, {\n      name: el.data.name,\n      id: el.id,\n      isChecked: el.id == props.newPlaceId,\n      color: \"primary\"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  });\n\n  const RadioButtonGroup = props => {\n    return /*#__PURE__*/_jsxDEV(RadioGroup, { ...props,\n      onChange: onChange,\n      children: places\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: \"buttons\",\n        component: RadioButtonGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textField,\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: Textarea,\n        placeholder: \"\\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u0430\",\n        type: \"text\",\n        name: \"addInventoryName\",\n        validate: [requiredField, maxlength20]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.textField,\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: Textarea,\n        placeholder: \"\\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0447\\u0438\\u0441\\u043B\\u043E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432\",\n        type: \"number\",\n        name: \"addInventoryCount\",\n        validate: [requiredField, isNumber, maxlength5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      size: \"large\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TextareaForm;\nexport let AddInventoryForm = reduxForm({\n  form: \"addInventoryForm\"\n})(TextareaForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"TextareaForm\");","map":{"version":3,"sources":["C:/Users/nigga/Desktop/прога/new-schema/src/components/ChangeInventory/AddInvenory/AddInventoryForm.jsx"],"names":["maxLengthCreator","requiredField","isNumber","React","Field","reduxForm","Textarea","Button","RadioGroup","Select","ChangeInventoryItem","styles","maxlength20","maxlength5","TextareaForm","props","onChange","e","setNewPlaceId","target","value","places","map","el","i","data","name","id","newPlaceId","RadioButtonGroup","handleSubmit","textField","AddInventoryForm","form"],"mappings":";AAAA,SAAQA,gBAAR,EAA0BC,aAA1B,EAAyCC,QAAzC,QAAwD,gCAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,QAAR,QAAuB,wCAAvB;AACA,SAAQC,MAAR,EAAgBC,UAAhB,EAA4BC,MAA5B,QAAyC,mBAAzC;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAGA,MAAMC,WAAW,GAAGZ,gBAAgB,CAAC,EAAD,CAApC;AACA,MAAMa,UAAU,GAAGb,gBAAgB,CAAC,CAAD,CAAnC;;AAGA,MAAMc,YAAY,GAAIC,KAAD,IAAW;AAE5B,MAAIC,QAAQ,GAAIC,CAAD,IAAO;AAClB,WAAOF,KAAK,CAACG,aAAN,CAAoBD,CAAC,CAACE,MAAF,CAASC,KAA7B,CAAP;AACH,GAFD;;AAGA,MAAIC,MAAM,GAAGN,KAAK,CAACM,MAAN,CAAaC,GAAb,CAAiB,CAACC,EAAD,EAAKC,CAAL,KAAW;AACrC,wBAAO,QAAC,mBAAD;AAA6B,MAAA,IAAI,EAAED,EAAE,CAACE,IAAH,CAAQC,IAA3C;AAAiD,MAAA,EAAE,EAAEH,EAAE,CAACI,EAAxD;AAA4D,MAAA,SAAS,EAAEJ,EAAE,CAACI,EAAH,IAASZ,KAAK,CAACa,UAAtF;AACqB,MAAA,KAAK,EAAC;AAD3B,OAA0BJ,CAA1B;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH,GAHY,CAAb;;AAKA,QAAMK,gBAAgB,GAAId,KAAD,IAAW;AAChC,wBAAO,QAAC,UAAD,OAAgBA,KAAhB;AAAuB,MAAA,QAAQ,EAAEC,QAAjC;AAAA,gBAA4CK;AAA5C;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD;;AAIA,sBACI;AAAM,IAAA,QAAQ,EAAEN,KAAK,CAACe,YAAtB;AAAA,4BACI;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,SAAS,EAAED;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACoB,SAAvB;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEzB,QAAlB;AAA4B,QAAA,WAAW,EAAC,8IAAxC;AAAoE,QAAA,IAAI,EAAC,MAAzE;AAAgF,QAAA,IAAI,EAAC,kBAArF;AACO,QAAA,QAAQ,EAAE,CAACL,aAAD,EAAgBW,WAAhB;AADjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAQI;AAAK,MAAA,SAAS,EAAED,MAAM,CAACoB,SAAvB;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEzB,QAAlB;AAA4B,QAAA,WAAW,EAAC,kIAAxC;AAAkE,QAAA,IAAI,EAAC,QAAvE;AAAgF,QAAA,IAAI,EAAC,mBAArF;AACO,QAAA,QAAQ,EAAE,CAACL,aAAD,EAAgBC,QAAhB,EAA0BW,UAA1B;AADjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ,eAYI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,OAA3B;AAAmC,MAAA,OAAO,EAAC,WAA3C;AAAuD,MAAA,KAAK,EAAC,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA9BD;;KAAMC,Y;AAgCN,OAAO,IAAIkB,gBAAgB,GAAG3B,SAAS,CAAC;AAAC4B,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAAsCnB,YAAtC,CAAvB","sourcesContent":["import {maxLengthCreator, requiredField, isNumber} from \"../../../validators/validators\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\nimport {Button, RadioGroup, Select} from '@material-ui/core';\r\nimport ChangeInventoryItem from \"../ChangeInventoryItem\";\r\nimport styles from './AddInventory.module.css'\r\n\r\n\r\nconst maxlength20 = maxLengthCreator(20)\r\nconst maxlength5 = maxLengthCreator(5)\r\n\r\n\r\nconst TextareaForm = (props) => {\r\n\r\n    let onChange = (e) => {\r\n        return props.setNewPlaceId(e.target.value)\r\n    }\r\n    let places = props.places.map((el, i) => {\r\n        return <ChangeInventoryItem key={i} name={el.data.name} id={el.id} isChecked={el.id == props.newPlaceId}\r\n                                    color='primary'/>\r\n    })\r\n\r\n    const RadioButtonGroup = (props) => {\r\n        return <RadioGroup {...props} onChange={onChange}>{places}</RadioGroup>\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='buttons' component={RadioButtonGroup}/>\r\n            </div>\r\n            <div className={styles.textField}>\r\n                <Field component={Textarea} placeholder='введите название элемента' type='text' name='addInventoryName'\r\n                       validate={[requiredField, maxlength20]}/>\r\n            </div>\r\n            <div className={styles.textField}>\r\n                <Field component={Textarea} placeholder='введите число элементов' type='number' name='addInventoryCount'\r\n                       validate={[requiredField, isNumber, maxlength5]}/>\r\n            </div>\r\n            <Button type=\"submit\" size='large' variant=\"contained\" color=\"primary\">Добавить</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport let AddInventoryForm = reduxForm({form: \"addInventoryForm\"})(TextareaForm)"]},"metadata":{},"sourceType":"module"}