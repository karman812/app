{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nigga\\\\Desktop\\\\\\u043F\\u0440\\u043E\\u0433\\u0430\\\\new-schema\\\\src\\\\components\\\\ItemsList\\\\ListContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { addInventoryThunkCreator, deleteInventoryThunkCreator, editInventoryThunkCreator, getDataThunkCreator, setPlacesHierarchy, setViewingPlace } from \"../../redux/reducer\";\nimport InventoryList from \"./InventoryList/InventoryList\";\nimport PlaceList from \"./PlacesList/PlacesList\";\nimport { Col, Row } from \"react-bootstrap\";\nimport styles from \"./PlacesList/PlaceList.module.css\";\nimport PlacesItem from \"./PlacesList/PlacesItem\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\nimport Route from \"react-router-dom/es/Route\";\nimport EditInventory from \"../ChangeInventory/EditInventory/EditInventory\";\nimport DeleteInventory from \"../ChangeInventory/DeleteInventory/DeleteInventory\";\nimport AddInventory from \"../ChangeInventory/AddInvenory/AddInventory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = async () => {\n      await this.props.getDataThunkCreator();\n      let places = this.setInventoryOnPlaces([...this.props.inventory], [...this.props.places]);\n      this.props.setPlacesHierarchy(this.getBuildingsData(places), places);\n    };\n\n    this.rerenderComponent = async () => {\n      await this.props.getDataThunkCreator();\n      let places = this.setInventoryOnPlaces([...this.props.inventory], [...this.props.places]);\n      console.log(places);\n      this.props.setPlacesHierarchy(this.getBuildingsData(places), places);\n      this.setState({\n        ms: \"Rerender\"\n      });\n    };\n\n    this.getAddInventoryList = () => {\n      return this.props.places.filter(el => !el.parts);\n    };\n\n    this.getUpdateInventoryList = () => {\n      return this.props.places.filter(el => !el.parts && el.inventory && el.inventory.length > 0);\n    };\n\n    this.setInventoryOnPlaces = (inventory, places) => {\n      inventory.forEach(inventoryItem => {\n        places.forEach(placeItem => {\n          if (!placeItem.inventory) {\n            placeItem.inventory = [];\n          }\n\n          if (inventoryItem.placeId == placeItem.id) {\n            placeItem.inventory.push(inventoryItem);\n          }\n        });\n      });\n      return places;\n    };\n\n    this.getPlacesHierarchy = (el, places, rooms) => {\n      if (el.parts && !rooms.includes(el.id)) {\n        let parts = el.parts.map(element => {\n          let index = places.findIndex(k => k.id == element);\n          rooms.push(el.id);\n\n          if (places[index].parts) {\n            return this.getPlacesHierarchy(places[index], places, rooms);\n          }\n\n          if (places[index]) {\n            return places[index];\n          }\n        });\n        let inventory = el.parts.map(element => {\n          let index = places.findIndex(k => k.id == element);\n          rooms.push(el.id);\n\n          if (places[index].inventory) {\n            return places[index].inventory;\n          }\n\n          if (places[index].parts) {\n            return this.getPlacesHierarchy(places[index], places, rooms);\n          }\n        });\n        return { ...el,\n          places: parts,\n          inventory: inventory.filter(el => el.length > 0)\n        };\n      }\n\n      rooms.push(el.id);\n    };\n\n    this.getBuildingsData = places => {\n      let rooms = [];\n      let buildings = places.map(el => {\n        let Buildings = this.getPlacesHierarchy(el, [...places], rooms);\n        return Buildings;\n      });\n      let newData = buildings.filter(el => el);\n      newData[0].inventory = newData[0].places[0].inventory.concat(newData[0].places[1].inventory);\n      return newData;\n    };\n\n    this.getPlacesHtml = el => {\n      if (el.places) {\n        let PlacesHtml = el.places.map((element, i, array) => {\n          if (element.places) {\n            return this.getPlacesHtml(element);\n          }\n\n          return /*#__PURE__*/_jsxDEV(PlacesItem, {\n            setViewingPlace: this.props.setViewingPlace,\n            id: element.id,\n            placeName: element.data.name,\n            viewingPlaceId: this.props.viewingPlaceId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 24\n          }, this);\n        });\n        return /*#__PURE__*/_jsxDEV(PlacesItem, {\n          setViewingPlace: this.props.setViewingPlace,\n          id: el.id,\n          childPlaces: PlacesHtml,\n          placeName: el.data.name,\n          viewingPlaceId: this.props.viewingPlaceId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 20\n        }, this);\n      }\n    };\n\n    this.getBuildingsHtml = () => {\n      let BuildingsHtml = this.props.state.placesData.map(el => {\n        return this.getPlacesHtml(el);\n      });\n      return BuildingsHtml;\n    };\n\n    this.getPlaceInventory = (item, desiredItemId) => {\n      if (item.id == desiredItemId) {\n        return item.inventory;\n      } else if (item.places) {\n        let inventory = item.places.find(el => {\n          return el.id == desiredItemId;\n        });\n\n        if (inventory) {\n          inventory = inventory.inventory;\n        }\n\n        if (!inventory) {\n          let a = item.places.map(el => {\n            inventory = this.getPlaceInventory(el, desiredItemId);\n            return inventory;\n          }).filter(el => el);\n          return a;\n        }\n\n        return inventory;\n      }\n    };\n\n    this.getChoosingInventoryItem = viewingPlaceId => {\n      let desiredPlace = this.props.state.placesData.map(el => {\n        return this.getPlaceInventory(el, viewingPlaceId).filter(element => element && element.length == undefined || element && element.length > 0);\n      }).filter(el => el.length == undefined || el.length > 0);\n      let place = desiredPlace.map(el => {\n        if (el.length) {\n          let unitedPlaces = [];\n          el.forEach(element => {\n            unitedPlaces = unitedPlaces.concat(element);\n          });\n          let element = unitedPlaces.filter(el => el);\n          return element;\n        }\n      });\n      place = [].concat(place[0]);\n      return place;\n    };\n\n    this.render = () => /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Switch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: styles.placesRow,\n        children: [/*#__PURE__*/_jsxDEV(PlaceList, {\n          getBuildingsHtml: this.getBuildingsHtml,\n          places: this.props.state.placesData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/inventory\",\n          render: () => /*#__PURE__*/_jsxDEV(InventoryList, {\n            rerenderComponent: this.rerenderComponent,\n            getChoosingInventoryItem: this.getChoosingInventoryItem,\n            viewingPlaceId: this.props.viewingPlaceId,\n            viewingPlaceName: this.props.viewingPlaceName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit\",\n          render: () => /*#__PURE__*/_jsxDEV(EditInventory, {\n            rerenderComponent: this.rerenderComponent,\n            getUpdateInventoryList: this.getUpdateInventoryList,\n            editInventory: this.props.editInventoryThunkCreator\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/delete\",\n          render: () => /*#__PURE__*/_jsxDEV(DeleteInventory, {\n            deleteInventory: this.props.deleteInventoryThunkCreator,\n            rerenderComponent: this.rerenderComponent,\n            getUpdateInventoryList: this.getUpdateInventoryList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          render: () => /*#__PURE__*/_jsxDEV(AddInventory, {\n            addNewInventory: this.props.addInventoryThunkCreator,\n            rerenderComponent: this.rerenderComponent,\n            getAddInventoryList: this.getAddInventoryList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    state: state.page,\n    inventory: state.page.inventory,\n    places: state.page.places,\n    viewingPlaceId: state.page.viewingPlaceId,\n    viewingPlaceName: state.page.viewingPlaceName\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getDataThunkCreator,\n  setPlacesHierarchy,\n  setViewingPlace,\n  addInventoryThunkCreator,\n  deleteInventoryThunkCreator,\n  editInventoryThunkCreator\n}))(ListContainer);","map":{"version":3,"sources":["C:/Users/nigga/Desktop/прога/new-schema/src/components/ItemsList/ListContainer.jsx"],"names":["React","connect","compose","addInventoryThunkCreator","deleteInventoryThunkCreator","editInventoryThunkCreator","getDataThunkCreator","setPlacesHierarchy","setViewingPlace","InventoryList","PlaceList","Col","Row","styles","PlacesItem","BrowserRouter","Switch","Route","EditInventory","DeleteInventory","AddInventory","ListContainer","Component","componentDidMount","props","places","setInventoryOnPlaces","inventory","getBuildingsData","rerenderComponent","console","log","setState","ms","getAddInventoryList","filter","el","parts","getUpdateInventoryList","length","forEach","inventoryItem","placeItem","placeId","id","push","getPlacesHierarchy","rooms","includes","map","element","index","findIndex","k","buildings","Buildings","newData","concat","getPlacesHtml","PlacesHtml","i","array","data","name","viewingPlaceId","getBuildingsHtml","BuildingsHtml","state","placesData","getPlaceInventory","item","desiredItemId","find","a","getChoosingInventoryItem","desiredPlace","undefined","place","unitedPlaces","render","placesRow","viewingPlaceName","mapStateToProps","page"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SACIC,wBADJ,EAEIC,2BAFJ,EAEiCC,yBAFjC,EAGIC,mBAHJ,EAIIC,kBAJJ,EAKIC,eALJ,QAMO,qBANP;AAOA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,aAAR,EAAuBC,MAAvB,QAAoC,kBAApC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,OAAOC,eAAP,MAA4B,oDAA5B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;;;AAGA,MAAMC,aAAN,SAA4BrB,KAAK,CAACsB,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAExCC,iBAFwC,GAEpB,YAAY;AAC5B,YAAM,KAAKC,KAAL,CAAWlB,mBAAX,EAAN;AACA,UAAImB,MAAM,GAAG,KAAKC,oBAAL,CAA0B,CAAC,GAAG,KAAKF,KAAL,CAAWG,SAAf,CAA1B,EAAqD,CAAC,GAAG,KAAKH,KAAL,CAAWC,MAAf,CAArD,CAAb;AACA,WAAKD,KAAL,CAAWjB,kBAAX,CAA8B,KAAKqB,gBAAL,CAAsBH,MAAtB,CAA9B,EAA6DA,MAA7D;AACH,KANuC;;AAAA,SAQxCI,iBARwC,GAQpB,YAAY;AAC5B,YAAM,KAAKL,KAAL,CAAWlB,mBAAX,EAAN;AACA,UAAImB,MAAM,GAAG,KAAKC,oBAAL,CAA0B,CAAC,GAAG,KAAKF,KAAL,CAAWG,SAAf,CAA1B,EAAqD,CAAC,GAAG,KAAKH,KAAL,CAAWC,MAAf,CAArD,CAAb;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,WAAKD,KAAL,CAAWjB,kBAAX,CAA8B,KAAKqB,gBAAL,CAAsBH,MAAtB,CAA9B,EAA6DA,MAA7D;AACA,WAAKO,QAAL,CAAc;AAACC,QAAAA,EAAE,EAAE;AAAL,OAAd;AACH,KAduC;;AAAA,SAgBxCC,mBAhBwC,GAgBlB,MAAM;AACxB,aAAO,KAAKV,KAAL,CAAWC,MAAX,CAAkBU,MAAlB,CAAyBC,EAAE,IAAI,CAACA,EAAE,CAACC,KAAnC,CAAP;AACH,KAlBuC;;AAAA,SAoBxCC,sBApBwC,GAoBf,MAAM;AAC3B,aAAO,KAAKd,KAAL,CAAWC,MAAX,CAAkBU,MAAlB,CAAyBC,EAAE,IAAI,CAACA,EAAE,CAACC,KAAJ,IAAaD,EAAE,CAACT,SAAhB,IAA6BS,EAAE,CAACT,SAAH,CAAaY,MAAb,GAAsB,CAAlF,CAAP;AACH,KAtBuC;;AAAA,SAwBxCb,oBAxBwC,GAwBjB,CAACC,SAAD,EAAYF,MAAZ,KAAuB;AAC1CE,MAAAA,SAAS,CAACa,OAAV,CAAkBC,aAAa,IAAI;AAC/BhB,QAAAA,MAAM,CAACe,OAAP,CAAeE,SAAS,IAAI;AACxB,cAAI,CAACA,SAAS,CAACf,SAAf,EAA0B;AACtBe,YAAAA,SAAS,CAACf,SAAV,GAAsB,EAAtB;AACH;;AACD,cAAIc,aAAa,CAACE,OAAd,IAAyBD,SAAS,CAACE,EAAvC,EAA2C;AACvCF,YAAAA,SAAS,CAACf,SAAV,CAAoBkB,IAApB,CAAyBJ,aAAzB;AACH;AACJ,SAPD;AAQH,OATD;AAUA,aAAOhB,MAAP;AACH,KApCuC;;AAAA,SAuCxCqB,kBAvCwC,GAuCnB,CAACV,EAAD,EAAKX,MAAL,EAAasB,KAAb,KAAuB;AACxC,UAAIX,EAAE,CAACC,KAAH,IAAY,CAACU,KAAK,CAACC,QAAN,CAAeZ,EAAE,CAACQ,EAAlB,CAAjB,EAAwC;AAEpC,YAAIP,KAAK,GAAGD,EAAE,CAACC,KAAH,CAASY,GAAT,CAAaC,OAAO,IAAI;AAChC,cAAIC,KAAK,GAAG1B,MAAM,CAAC2B,SAAP,CAAiBC,CAAC,IAAIA,CAAC,CAACT,EAAF,IAAQM,OAA9B,CAAZ;AACAH,UAAAA,KAAK,CAACF,IAAN,CAAWT,EAAE,CAACQ,EAAd;;AAEA,cAAInB,MAAM,CAAC0B,KAAD,CAAN,CAAcd,KAAlB,EAAyB;AACrB,mBAAO,KAAKS,kBAAL,CAAwBrB,MAAM,CAAC0B,KAAD,CAA9B,EAAuC1B,MAAvC,EAA+CsB,KAA/C,CAAP;AACH;;AACD,cAAItB,MAAM,CAAC0B,KAAD,CAAV,EAAmB;AACf,mBAAO1B,MAAM,CAAC0B,KAAD,CAAb;AACH;AACJ,SAVW,CAAZ;AAWA,YAAIxB,SAAS,GAAGS,EAAE,CAACC,KAAH,CAASY,GAAT,CAAaC,OAAO,IAAI;AACpC,cAAIC,KAAK,GAAG1B,MAAM,CAAC2B,SAAP,CAAiBC,CAAC,IAAIA,CAAC,CAACT,EAAF,IAAQM,OAA9B,CAAZ;AACAH,UAAAA,KAAK,CAACF,IAAN,CAAWT,EAAE,CAACQ,EAAd;;AAEA,cAAInB,MAAM,CAAC0B,KAAD,CAAN,CAAcxB,SAAlB,EAA6B;AACzB,mBAAOF,MAAM,CAAC0B,KAAD,CAAN,CAAcxB,SAArB;AACH;;AACD,cAAIF,MAAM,CAAC0B,KAAD,CAAN,CAAcd,KAAlB,EAAyB;AACrB,mBAAO,KAAKS,kBAAL,CAAwBrB,MAAM,CAAC0B,KAAD,CAA9B,EAAuC1B,MAAvC,EAA+CsB,KAA/C,CAAP;AACH;AACJ,SAVe,CAAhB;AAWA,eAAO,EACH,GAAGX,EADA;AAEHX,UAAAA,MAAM,EAAEY,KAFL;AAGHV,UAAAA,SAAS,EAAEA,SAAS,CAACQ,MAAV,CAAiBC,EAAE,IAAIA,EAAE,CAACG,MAAH,GAAY,CAAnC;AAHR,SAAP;AAKH;;AACDQ,MAAAA,KAAK,CAACF,IAAN,CAAWT,EAAE,CAACQ,EAAd;AACH,KAvEuC;;AAAA,SAyExChB,gBAzEwC,GAyEpBH,MAAD,IAAY;AAC3B,UAAIsB,KAAK,GAAG,EAAZ;AACA,UAAIO,SAAS,GAAG7B,MAAM,CAACwB,GAAP,CAAYb,EAAD,IAAQ;AAC/B,YAAImB,SAAS,GAAG,KAAKT,kBAAL,CAAwBV,EAAxB,EAA4B,CAAC,GAAGX,MAAJ,CAA5B,EAAyCsB,KAAzC,CAAhB;AACA,eAAOQ,SAAP;AACH,OAHe,CAAhB;AAIA,UAAIC,OAAO,GAAGF,SAAS,CAACnB,MAAV,CAAiBC,EAAE,IAAIA,EAAvB,CAAd;AACAoB,MAAAA,OAAO,CAAC,CAAD,CAAP,CAAW7B,SAAX,GAAuB6B,OAAO,CAAC,CAAD,CAAP,CAAW/B,MAAX,CAAkB,CAAlB,EAAqBE,SAArB,CAA+B8B,MAA/B,CAAsCD,OAAO,CAAC,CAAD,CAAP,CAAW/B,MAAX,CAAkB,CAAlB,EAAqBE,SAA3D,CAAvB;AACA,aAAO6B,OAAP;AACH,KAlFuC;;AAAA,SAoFxCE,aApFwC,GAoFvBtB,EAAD,IAAQ;AACpB,UAAIA,EAAE,CAACX,MAAP,EAAe;AACX,YAAIkC,UAAU,GAAGvB,EAAE,CAACX,MAAH,CAAUwB,GAAV,CAAc,CAACC,OAAD,EAAUU,CAAV,EAAaC,KAAb,KAAuB;AAClD,cAAIX,OAAO,CAACzB,MAAZ,EAAoB;AAChB,mBAAO,KAAKiC,aAAL,CAAmBR,OAAnB,CAAP;AACH;;AACD,8BAAO,QAAC,UAAD;AAAY,YAAA,eAAe,EAAE,KAAK1B,KAAL,CAAWhB,eAAxC;AAAyD,YAAA,EAAE,EAAE0C,OAAO,CAACN,EAArE;AACY,YAAA,SAAS,EAAEM,OAAO,CAACY,IAAR,CAAaC,IADpC;AAC0C,YAAA,cAAc,EAAE,KAAKvC,KAAL,CAAWwC;AADrE;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEH,SANgB,CAAjB;AAOA,4BAAO,QAAC,UAAD;AAAY,UAAA,eAAe,EAAE,KAAKxC,KAAL,CAAWhB,eAAxC;AAAyD,UAAA,EAAE,EAAE4B,EAAE,CAACQ,EAAhE;AAAoE,UAAA,WAAW,EAAEe,UAAjF;AACY,UAAA,SAAS,EAAEvB,EAAE,CAAC0B,IAAH,CAAQC,IAD/B;AACqC,UAAA,cAAc,EAAE,KAAKvC,KAAL,CAAWwC;AADhE;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEH;AACJ,KAhGuC;;AAAA,SAkGxCC,gBAlGwC,GAkGrB,MAAM;AACrB,UAAIC,aAAa,GAAG,KAAK1C,KAAL,CAAW2C,KAAX,CAAiBC,UAAjB,CAA4BnB,GAA5B,CAAgCb,EAAE,IAAI;AACtD,eAAO,KAAKsB,aAAL,CAAmBtB,EAAnB,CAAP;AACH,OAFmB,CAApB;AAGA,aAAO8B,aAAP;AACH,KAvGuC;;AAAA,SAyGxCG,iBAzGwC,GAyGpB,CAACC,IAAD,EAAOC,aAAP,KAAyB;AAEzC,UAAID,IAAI,CAAC1B,EAAL,IAAW2B,aAAf,EAA8B;AAC1B,eAAOD,IAAI,CAAC3C,SAAZ;AACH,OAFD,MAEO,IAAI2C,IAAI,CAAC7C,MAAT,EAAiB;AACpB,YAAIE,SAAS,GAAG2C,IAAI,CAAC7C,MAAL,CAAY+C,IAAZ,CAAiBpC,EAAE,IAAI;AACnC,iBAAOA,EAAE,CAACQ,EAAH,IAAS2B,aAAhB;AACH,SAFe,CAAhB;;AAGA,YAAI5C,SAAJ,EAAe;AACXA,UAAAA,SAAS,GAAGA,SAAS,CAACA,SAAtB;AACH;;AACD,YAAI,CAACA,SAAL,EAAgB;AACZ,cAAI8C,CAAC,GAAGH,IAAI,CAAC7C,MAAL,CAAYwB,GAAZ,CAAgBb,EAAE,IAAI;AAC1BT,YAAAA,SAAS,GAAG,KAAK0C,iBAAL,CAAuBjC,EAAvB,EAA2BmC,aAA3B,CAAZ;AACA,mBAAO5C,SAAP;AACH,WAHO,EAGLQ,MAHK,CAGEC,EAAE,IAAIA,EAHR,CAAR;AAIA,iBAAOqC,CAAP;AACH;;AACD,eAAO9C,SAAP;AACH;AACJ,KA7HuC;;AAAA,SA+HxC+C,wBA/HwC,GA+HZV,cAAD,IAAoB;AAC3C,UAAIW,YAAY,GAAG,KAAKnD,KAAL,CAAW2C,KAAX,CAAiBC,UAAjB,CAA4BnB,GAA5B,CAAgCb,EAAE,IAAI;AACrD,eAAO,KAAKiC,iBAAL,CAAuBjC,EAAvB,EAA2B4B,cAA3B,EAA2C7B,MAA3C,CAAkDe,OAAO,IAAIA,OAAO,IAAIA,OAAO,CAACX,MAAR,IAAkBqC,SAA7B,IAA0C1B,OAAO,IAAIA,OAAO,CAACX,MAAR,GAAiB,CAAnI,CAAP;AACH,OAFkB,EAEhBJ,MAFgB,CAETC,EAAE,IAAIA,EAAE,CAACG,MAAH,IAAaqC,SAAb,IAA0BxC,EAAE,CAACG,MAAH,GAAY,CAFnC,CAAnB;AAIA,UAAIsC,KAAK,GAAGF,YAAY,CAAC1B,GAAb,CAAiBb,EAAE,IAAI;AAC/B,YAAIA,EAAE,CAACG,MAAP,EAAe;AACX,cAAIuC,YAAY,GAAG,EAAnB;AAEA1C,UAAAA,EAAE,CAACI,OAAH,CAAWU,OAAO,IAAI;AAClB4B,YAAAA,YAAY,GAAGA,YAAY,CAACrB,MAAb,CAAoBP,OAApB,CAAf;AACH,WAFD;AAIA,cAAIA,OAAO,GAAG4B,YAAY,CAAC3C,MAAb,CAAoBC,EAAE,IAAIA,EAA1B,CAAd;AACA,iBAAOc,OAAP;AACH;AACJ,OAXW,CAAZ;AAYA2B,MAAAA,KAAK,GAAG,GAAGpB,MAAH,CAAUoB,KAAK,CAAC,CAAD,CAAf,CAAR;AACA,aAAOA,KAAP;AACH,KAlJuC;;AAAA,SAoJxCE,MApJwC,GAoJ/B,mBACL,QAAC,aAAD;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAElE,MAAM,CAACmE,SAAvB;AAAA,gCACI,QAAC,SAAD;AAAW,UAAA,gBAAgB,EAAE,KAAKf,gBAAlC;AAAoD,UAAA,MAAM,EAAE,KAAKzC,KAAL,CAAW2C,KAAX,CAAiBC;AAA7E;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAyB,UAAA,MAAM,EAAE,mBAAM,QAAC,aAAD;AAAe,YAAA,iBAAiB,EAAE,KAAKvC,iBAAvC;AACe,YAAA,wBAAwB,EAAE,KAAK6C,wBAD9C;AAEe,YAAA,cAAc,EAAE,KAAKlD,KAAL,CAAWwC,cAF1C;AAGe,YAAA,gBAAgB,EAAE,KAAKxC,KAAL,CAAWyD;AAH5C;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,MAAM,EAAE,mBAAM,QAAC,aAAD;AAAe,YAAA,iBAAiB,EAAE,KAAKpD,iBAAvC;AACe,YAAA,sBAAsB,EAAE,KAAKS,sBAD5C;AAEe,YAAA,aAAa,EAAE,KAAKd,KAAL,CAAWnB;AAFzC;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,gBANJ,eASI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AACO,UAAA,MAAM,EAAE,mBAAM,QAAC,eAAD;AAAiB,YAAA,eAAe,EAAE,KAAKmB,KAAL,CAAWpB,2BAA7C;AACiB,YAAA,iBAAiB,EAAE,KAAKyB,iBADzC;AAEiB,YAAA,sBAAsB,EAAE,KAAKS;AAF9C;AAAA;AAAA;AAAA;AAAA;AADrB;AAAA;AAAA;AAAA;AAAA,gBATJ,eAaI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,MAAM,EAAE,mBAAM,QAAC,YAAD;AAAc,YAAA,eAAe,EAAE,KAAKd,KAAL,CAAWrB,wBAA1C;AACc,YAAA,iBAAiB,EAAE,KAAK0B,iBADtC;AAEc,YAAA,mBAAmB,EAAE,KAAKK;AAFxC;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAmBI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YArJoC;AAAA;;AAAA;;AAiL5C,IAAIgD,eAAe,GAAIf,KAAD,IAAW;AAC7B,SAAO;AACHA,IAAAA,KAAK,EAAEA,KAAK,CAACgB,IADV;AAEHxD,IAAAA,SAAS,EAAEwC,KAAK,CAACgB,IAAN,CAAWxD,SAFnB;AAGHF,IAAAA,MAAM,EAAE0C,KAAK,CAACgB,IAAN,CAAW1D,MAHhB;AAIHuC,IAAAA,cAAc,EAAEG,KAAK,CAACgB,IAAN,CAAWnB,cAJxB;AAKHiB,IAAAA,gBAAgB,EAAEd,KAAK,CAACgB,IAAN,CAAWF;AAL1B,GAAP;AAOH,CARD;;AAUA,eAAe/E,OAAO,CAACD,OAAO,CAACiF,eAAD,EAAkB;AAC5C5E,EAAAA,mBAD4C;AAE5CC,EAAAA,kBAF4C;AAG5CC,EAAAA,eAH4C;AAI5CL,EAAAA,wBAJ4C;AAK5CC,EAAAA,2BAL4C;AAM5CC,EAAAA;AAN4C,CAAlB,CAAR,CAAP,CAOXgB,aAPW,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    addInventoryThunkCreator,\r\n    deleteInventoryThunkCreator, editInventoryThunkCreator,\r\n    getDataThunkCreator,\r\n    setPlacesHierarchy,\r\n    setViewingPlace\r\n} from \"../../redux/reducer\";\r\nimport InventoryList from \"./InventoryList/InventoryList\";\r\nimport PlaceList from \"./PlacesList/PlacesList\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport styles from \"./PlacesList/PlaceList.module.css\"\r\nimport PlacesItem from \"./PlacesList/PlacesItem\";\r\nimport {BrowserRouter, Switch} from \"react-router-dom\";\r\nimport Route from \"react-router-dom/es/Route\";\r\nimport EditInventory from \"../ChangeInventory/EditInventory/EditInventory\";\r\nimport DeleteInventory from \"../ChangeInventory/DeleteInventory/DeleteInventory\";\r\nimport AddInventory from \"../ChangeInventory/AddInvenory/AddInventory\";\r\n\r\n\r\nclass ListContainer extends React.Component {\r\n\r\n    componentDidMount = async () => {\r\n        await this.props.getDataThunkCreator()\r\n        let places = this.setInventoryOnPlaces([...this.props.inventory], [...this.props.places])\r\n        this.props.setPlacesHierarchy(this.getBuildingsData(places), places)\r\n    }\r\n\r\n    rerenderComponent = async () => {\r\n        await this.props.getDataThunkCreator()\r\n        let places = this.setInventoryOnPlaces([...this.props.inventory], [...this.props.places])\r\n        console.log(places)\r\n        this.props.setPlacesHierarchy(this.getBuildingsData(places), places)\r\n        this.setState({ms: \"Rerender\"});\r\n    }\r\n\r\n    getAddInventoryList = () => {\r\n        return this.props.places.filter(el => !el.parts)\r\n    }\r\n\r\n    getUpdateInventoryList = () => {\r\n        return this.props.places.filter(el => !el.parts && el.inventory && el.inventory.length > 0)\r\n    }\r\n\r\n    setInventoryOnPlaces = (inventory, places) => {\r\n        inventory.forEach(inventoryItem => {\r\n            places.forEach(placeItem => {\r\n                if (!placeItem.inventory) {\r\n                    placeItem.inventory = []\r\n                }\r\n                if (inventoryItem.placeId == placeItem.id) {\r\n                    placeItem.inventory.push(inventoryItem)\r\n                }\r\n            })\r\n        })\r\n        return places\r\n    }\r\n\r\n\r\n    getPlacesHierarchy = (el, places, rooms) => {\r\n        if (el.parts && !rooms.includes(el.id)) {\r\n\r\n            let parts = el.parts.map(element => {\r\n                let index = places.findIndex(k => k.id == element)\r\n                rooms.push(el.id)\r\n\r\n                if (places[index].parts) {\r\n                    return this.getPlacesHierarchy(places[index], places, rooms)\r\n                }\r\n                if (places[index]) {\r\n                    return places[index]\r\n                }\r\n            })\r\n            let inventory = el.parts.map(element => {\r\n                let index = places.findIndex(k => k.id == element)\r\n                rooms.push(el.id)\r\n\r\n                if (places[index].inventory) {\r\n                    return places[index].inventory\r\n                }\r\n                if (places[index].parts) {\r\n                    return this.getPlacesHierarchy(places[index], places, rooms)\r\n                }\r\n            })\r\n            return {\r\n                ...el,\r\n                places: parts,\r\n                inventory: inventory.filter(el => el.length > 0)\r\n            }\r\n        }\r\n        rooms.push(el.id)\r\n    }\r\n\r\n    getBuildingsData = (places) => {\r\n        let rooms = []\r\n        let buildings = places.map((el) => {\r\n            let Buildings = this.getPlacesHierarchy(el, [...places], rooms)\r\n            return Buildings\r\n        })\r\n        let newData = buildings.filter(el => el)\r\n        newData[0].inventory = newData[0].places[0].inventory.concat(newData[0].places[1].inventory)\r\n        return newData\r\n    }\r\n\r\n    getPlacesHtml = (el) => {\r\n        if (el.places) {\r\n            let PlacesHtml = el.places.map((element, i, array) => {\r\n                if (element.places) {\r\n                    return this.getPlacesHtml(element)\r\n                }\r\n                return <PlacesItem setViewingPlace={this.props.setViewingPlace} id={element.id}\r\n                                   placeName={element.data.name} viewingPlaceId={this.props.viewingPlaceId}/>\r\n            })\r\n            return <PlacesItem setViewingPlace={this.props.setViewingPlace} id={el.id} childPlaces={PlacesHtml}\r\n                               placeName={el.data.name} viewingPlaceId={this.props.viewingPlaceId}/>\r\n        }\r\n    }\r\n\r\n    getBuildingsHtml = () => {\r\n        let BuildingsHtml = this.props.state.placesData.map(el => {\r\n            return this.getPlacesHtml(el)\r\n        })\r\n        return BuildingsHtml\r\n    }\r\n\r\n    getPlaceInventory = (item, desiredItemId) => {\r\n\r\n        if (item.id == desiredItemId) {\r\n            return item.inventory\r\n        } else if (item.places) {\r\n            let inventory = item.places.find(el => {\r\n                return el.id == desiredItemId\r\n            })\r\n            if (inventory) {\r\n                inventory = inventory.inventory\r\n            }\r\n            if (!inventory) {\r\n                let a = item.places.map(el => {\r\n                    inventory = this.getPlaceInventory(el, desiredItemId)\r\n                    return inventory\r\n                }).filter(el => el)\r\n                return a\r\n            }\r\n            return inventory\r\n        }\r\n    }\r\n\r\n    getChoosingInventoryItem = (viewingPlaceId) => {\r\n        let desiredPlace = this.props.state.placesData.map(el => {\r\n            return this.getPlaceInventory(el, viewingPlaceId).filter(element => element && element.length == undefined || element && element.length > 0)\r\n        }).filter(el => el.length == undefined || el.length > 0)\r\n\r\n        let place = desiredPlace.map(el => {\r\n            if (el.length) {\r\n                let unitedPlaces = []\r\n\r\n                el.forEach(element => {\r\n                    unitedPlaces = unitedPlaces.concat(element)\r\n                })\r\n\r\n                let element = unitedPlaces.filter(el => el)\r\n                return element\r\n            }\r\n        })\r\n        place = [].concat(place[0])\r\n        return place\r\n    }\r\n\r\n    render = () => (\r\n        <BrowserRouter>\r\n            <Switch></Switch>\r\n            <Row className={styles.placesRow}>\r\n                <PlaceList getBuildingsHtml={this.getBuildingsHtml} places={this.props.state.placesData}/>\r\n                <Route path='/inventory' render={() => <InventoryList rerenderComponent={this.rerenderComponent}\r\n                                                                      getChoosingInventoryItem={this.getChoosingInventoryItem}\r\n                                                                      viewingPlaceId={this.props.viewingPlaceId}\r\n                                                                      viewingPlaceName={this.props.viewingPlaceName}/>}/>\r\n                <Route path='/edit' render={() => <EditInventory rerenderComponent={this.rerenderComponent}\r\n                                                                 getUpdateInventoryList={this.getUpdateInventoryList}\r\n                                                                 editInventory={this.props.editInventoryThunkCreator}/>}/>\r\n                <Route path='/delete'\r\n                       render={() => <DeleteInventory deleteInventory={this.props.deleteInventoryThunkCreator}\r\n                                                      rerenderComponent={this.rerenderComponent}\r\n                                                      getUpdateInventoryList={this.getUpdateInventoryList}/>}/>\r\n                <Route path='/add' render={() => <AddInventory addNewInventory={this.props.addInventoryThunkCreator}\r\n                                                               rerenderComponent={this.rerenderComponent}\r\n                                                               getAddInventoryList={this.getAddInventoryList}/>}/>\r\n            </Row>\r\n            <Row>\r\n\r\n            </Row>\r\n        </BrowserRouter>\r\n\r\n\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.page,\r\n        inventory: state.page.inventory,\r\n        places: state.page.places,\r\n        viewingPlaceId: state.page.viewingPlaceId,\r\n        viewingPlaceName: state.page.viewingPlaceName\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    getDataThunkCreator,\r\n    setPlacesHierarchy,\r\n    setViewingPlace,\r\n    addInventoryThunkCreator,\r\n    deleteInventoryThunkCreator,\r\n    editInventoryThunkCreator\r\n}))(ListContainer);"]},"metadata":{},"sourceType":"module"}