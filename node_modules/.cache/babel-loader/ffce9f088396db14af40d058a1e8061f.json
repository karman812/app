{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nigga\\\\Desktop\\\\\\u043F\\u0440\\u043E\\u0433\\u0430\\\\new-schema\\\\src\\\\components\\\\ChangeInventory\\\\DeleteInventory\\\\DeleteInventory.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ChangeInventoryItem from \"../ChangeInventoryItem\";\nimport { Button, RadioGroup } from \"@material-ui/core\";\nimport styles from './DeleteInventory.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeleteInventory = props => {\n  _s();\n\n  let [newPlaceId, setNewPlaceId] = useState(undefined);\n  let places = props.getUpdateInventoryList();\n  let inventoryItems = [];\n  places.map(inventoryItem => {\n    inventoryItem.inventory.forEach(el => {\n      inventoryItems.push([el.data.name, el.id]);\n    });\n  });\n\n  let onChange = e => {\n    setNewPlaceId(e.target.value);\n  };\n\n  let getInventory = inventoryItems.map(el => {\n    return /*#__PURE__*/_jsxDEV(ChangeInventoryItem, {\n      name: el[0],\n      id: el[1],\n      setNewPlaceId: setNewPlaceId,\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  });\n\n  let deleteInventory = async () => {\n    if (newPlaceId) {\n      await props.deleteInventory(newPlaceId);\n      props.rerenderComponent();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.deleteInventoryCol,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: \"\\u0423\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0438\\u043D\\u0432\\u0435\\u043D\\u0442\\u0430\\u0440\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.chooseTitle,\n      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n        onChange: onChange,\n        children: getInventory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: event => deleteInventory(),\n        type: \"submit\",\n        size: \"large\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeleteInventory, \"eyXNQITEkUjigAagDhA5eNFuRSE=\");\n\n_c = DeleteInventory;\nexport default DeleteInventory;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteInventory\");","map":{"version":3,"sources":["C:/Users/nigga/Desktop/прога/new-schema/src/components/ChangeInventory/DeleteInventory/DeleteInventory.jsx"],"names":["React","useState","ChangeInventoryItem","Button","RadioGroup","styles","DeleteInventory","props","newPlaceId","setNewPlaceId","undefined","places","getUpdateInventoryList","inventoryItems","map","inventoryItem","inventory","forEach","el","push","data","name","id","onChange","e","target","value","getInventory","deleteInventory","rerenderComponent","deleteInventoryCol","title","chooseTitle","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AACA,SAAQC,MAAR,EAAgBC,UAAhB,QAAiC,mBAAjC;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAC/B,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAACS,SAAD,CAA1C;AACA,MAAIC,MAAM,GAAGJ,KAAK,CAACK,sBAAN,EAAb;AAEA,MAAIC,cAAc,GAAG,EAArB;AAEAF,EAAAA,MAAM,CAACG,GAAP,CAAWC,aAAa,IAAI;AACxBA,IAAAA,aAAa,CAACC,SAAd,CAAwBC,OAAxB,CAAgCC,EAAE,IAAI;AAClCL,MAAAA,cAAc,CAACM,IAAf,CAAoB,CAACD,EAAE,CAACE,IAAH,CAAQC,IAAT,EAAeH,EAAE,CAACI,EAAlB,CAApB;AACH,KAFD;AAGH,GAJD;;AAMA,MAAIC,QAAQ,GAAIC,CAAD,IAAO;AAClBf,IAAAA,aAAa,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAIA,MAAIC,YAAY,GAAGd,cAAc,CAACC,GAAf,CAAmBI,EAAE,IAAI;AACxC,wBAAO,QAAC,mBAAD;AAAqB,MAAA,IAAI,EAAEA,EAAE,CAAC,CAAD,CAA7B;AAAkC,MAAA,EAAE,EAAEA,EAAE,CAAC,CAAD,CAAxC;AAA6C,MAAA,aAAa,EAAET,aAA5D;AAA2E,MAAA,KAAK,EAAC;AAAjF;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFkB,CAAnB;;AAIA,MAAImB,eAAe,GAAG,YAAY;AAC9B,QAAIpB,UAAJ,EAAgB;AACZ,YAAMD,KAAK,CAACqB,eAAN,CAAsBpB,UAAtB,CAAN;AACAD,MAAAA,KAAK,CAACsB,iBAAN;AACH;AACJ,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAExB,MAAM,CAACyB,kBAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAET,QAAtB;AAAA,kBAAiCI;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEM,KAAK,IAAIL,eAAe,EAAzC;AAA6C,QAAA,IAAI,EAAC,QAAlD;AAA2D,QAAA,IAAI,EAAC,OAAhE;AAAwE,QAAA,OAAO,EAAC,WAAhF;AACQ,QAAA,KAAK,EAAC,WADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAzCD;;GAAMtB,e;;KAAAA,e;AA2CN,eAAeA,eAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport ChangeInventoryItem from \"../ChangeInventoryItem\";\r\nimport {Button, RadioGroup} from \"@material-ui/core\";\r\nimport styles from './DeleteInventory.module.css'\r\n\r\nconst DeleteInventory = (props) => {\r\n    let [newPlaceId, setNewPlaceId] = useState(undefined)\r\n    let places = props.getUpdateInventoryList()\r\n\r\n    let inventoryItems = []\r\n\r\n    places.map(inventoryItem => {\r\n        inventoryItem.inventory.forEach(el => {\r\n            inventoryItems.push([el.data.name, el.id])\r\n        })\r\n    })\r\n\r\n    let onChange = (e) => {\r\n        setNewPlaceId(e.target.value)\r\n    }\r\n\r\n    let getInventory = inventoryItems.map(el => {\r\n        return <ChangeInventoryItem name={el[0]} id={el[1]} setNewPlaceId={setNewPlaceId} color='secondary'/>\r\n    })\r\n\r\n    let deleteInventory = async () => {\r\n        if (newPlaceId) {\r\n            await props.deleteInventory(newPlaceId)\r\n            props.rerenderComponent()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.deleteInventoryCol}>\r\n            <div className={styles.title}>Удаление инвентаря</div>\r\n\r\n            <div className={styles.chooseTitle}>Выберете элемент</div>\r\n            <div>\r\n                <RadioGroup onChange={onChange}>{getInventory}</RadioGroup>\r\n            </div>\r\n            <div>\r\n                <Button onClick={event => deleteInventory()} type=\"submit\" size='large' variant=\"contained\"\r\n                        color=\"secondary\">Удалить</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeleteInventory"]},"metadata":{},"sourceType":"module"}